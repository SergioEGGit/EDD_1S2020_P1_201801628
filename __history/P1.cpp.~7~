#pragma hdrstop
#pragma argsused

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

//---------------------------------Librerias------------------------------------
   #include <iostream>
   #include <stdio.h>
   #include <conio.h>
   #include <string>
   #include <windows.h>
   using namespace std;

//----------------------------------Variables-----------------------------------

   int Alto = 0;
   int Ancho = 0;

//------------------------------------Métodos-----------------------------------

	 //--------------------------------Marco-------------------------------

		  void marco (int a, int b, int c, int d)
		  {
			 int i;

			 //Linea Horizontal Superior
			 for (i = 2; i < Ancho; i++)
			 {
				gotoxy(i, 2);
				if(i < Ancho - 1)
				{
				   printf("%c", 205);
				}
				else
				{
				   printf("%c", 187);
				}
			 }

			 //Linea Horizontal Inferior
			 for (i = 2; i < Ancho; i++)
			 {
				gotoxy(i, Alto);
				if(i < Ancho - 1)
				{
				   printf("%c", 205);
				}
				else
				{
				   printf("%c", 188);
				}
			 }

			 //Linea Vertical Derecha
			 for(int z = 0; z < Alto - 3; z++)
			 {
				for(i = 2; i < Ancho - 1; i++)
				{
				   gotoxy(i + 1, z + 3);
				   if(i < Ancho - 2)
				   {
					  printf("%c", 32);
				   }
				   else
				   {
					  printf("%c", 186);
				   }
				}
			 }

			int j;

			//Linea Vertical Izquierda
			for (d = 3; d < Alto; d++)
			{
			   gotoxy(2, d);
			   printf("%c", 186);
			}

			//Esquina Superior Izquierda
			gotoxy(2, 2);
			printf("%c", 201);

			//Esquina Inferior Izquierda
			gotoxy(2, Alto);
			printf("%c", 200);
		 }


	 //-----------------------------Fullscreen-----------------------------

		void Fullscreen()
		{
		   keybd_event(VK_MENU,
						  0x38,
							 0,
							 0);
		   keybd_event(VK_RETURN,
							0x1c,
							   0,
							   0);
		   keybd_event(VK_RETURN,
							0x1c,
				 KEYEVENTF_KEYUP,
							   0);
		   keybd_event(VK_MENU,
						  0x38,
			   KEYEVENTF_KEYUP,
							 0);
		   return;
		}

	 //---------------------Obtener Resolución Pantalla--------------------

		void Resolucion()
		{
			Ancho = (GetSystemMetrics(SM_CXSCREEN) / 8) - 2;
			Alto = (GetSystemMetrics(SM_CYSCREEN) / 19) + 1;
		}

//-------------------------------------Main-------------------------------------
	 int _tmain(int argc, _TCHAR* argv[])
	 {
		Fullscreen();
		Resolucion();
		system("color 0b");
		clrscr();
		marco(1, 1, Alto, Ancho);
		return 0;
	 }





